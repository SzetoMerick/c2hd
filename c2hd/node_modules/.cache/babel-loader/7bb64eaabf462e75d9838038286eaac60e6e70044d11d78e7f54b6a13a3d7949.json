{"ast":null,"code":"/*!\r\n * forwarded\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n\n'use strict';\n\n/**\r\n * Module exports.\r\n * @public\r\n */\nmodule.exports = forwarded;\n\n/**\r\n * Get all addresses in the request, using the `X-Forwarded-For` header.\r\n *\r\n * @param {object} req\r\n * @return {array}\r\n * @public\r\n */\n\nfunction forwarded(req) {\n  if (!req) {\n    throw new TypeError('argument req is required');\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '');\n  var socketAddr = getSocketAddr(req);\n  var addrs = [socketAddr].concat(proxyAddrs);\n\n  // return all addresses\n  return addrs;\n}\n\n/**\r\n * Get the socket address for a request.\r\n *\r\n * @param {object} req\r\n * @return {string}\r\n * @private\r\n */\n\nfunction getSocketAddr(req) {\n  return req.socket ? req.socket.remoteAddress : req.connection.remoteAddress;\n}\n\n/**\r\n * Parse the X-Forwarded-For header.\r\n *\r\n * @param {string} header\r\n * @private\r\n */\n\nfunction parse(header) {\n  var end = header.length;\n  var list = [];\n  var start = header.length;\n\n  // gather addresses, backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20:\n        /*   */\n        if (start === end) {\n          start = end = i;\n        }\n        break;\n      case 0x2c:\n        /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end));\n        }\n        start = end = i;\n        break;\n      default:\n        start = i;\n        break;\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start, end));\n  }\n  return list;\n}","map":{"version":3,"names":["module","exports","forwarded","req","TypeError","proxyAddrs","parse","headers","socketAddr","getSocketAddr","addrs","concat","socket","remoteAddress","connection","header","end","length","list","start","i","charCodeAt","push","substring"],"sources":["D:/Documents/VS Code Projects/c2hd/c2hd/node_modules/forwarded/index.js"],"sourcesContent":["/*!\r\n * forwarded\r\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = forwarded\r\n\r\n/**\r\n * Get all addresses in the request, using the `X-Forwarded-For` header.\r\n *\r\n * @param {object} req\r\n * @return {array}\r\n * @public\r\n */\r\n\r\nfunction forwarded (req) {\r\n  if (!req) {\r\n    throw new TypeError('argument req is required')\r\n  }\r\n\r\n  // simple header parsing\r\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\r\n  var socketAddr = getSocketAddr(req)\r\n  var addrs = [socketAddr].concat(proxyAddrs)\r\n\r\n  // return all addresses\r\n  return addrs\r\n}\r\n\r\n/**\r\n * Get the socket address for a request.\r\n *\r\n * @param {object} req\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction getSocketAddr (req) {\r\n  return req.socket\r\n    ? req.socket.remoteAddress\r\n    : req.connection.remoteAddress\r\n}\r\n\r\n/**\r\n * Parse the X-Forwarded-For header.\r\n *\r\n * @param {string} header\r\n * @private\r\n */\r\n\r\nfunction parse (header) {\r\n  var end = header.length\r\n  var list = []\r\n  var start = header.length\r\n\r\n  // gather addresses, backwards\r\n  for (var i = header.length - 1; i >= 0; i--) {\r\n    switch (header.charCodeAt(i)) {\r\n      case 0x20: /*   */\r\n        if (start === end) {\r\n          start = end = i\r\n        }\r\n        break\r\n      case 0x2c: /* , */\r\n        if (start !== end) {\r\n          list.push(header.substring(start, end))\r\n        }\r\n        start = end = i\r\n        break\r\n      default:\r\n        start = i\r\n        break\r\n    }\r\n  }\r\n\r\n  // final address\r\n  if (start !== end) {\r\n    list.push(header.substring(start, end))\r\n  }\r\n\r\n  return list\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAO,GAAGC,SAAS;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,CAAEC,GAAG,EAAE;EACvB,IAAI,CAACA,GAAG,EAAE;IACR,MAAM,IAAIC,SAAS,CAAC,0BAA0B,CAAC;EACjD;;EAEA;EACA,IAAIC,UAAU,GAAGC,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;EAC5D,IAAIC,UAAU,GAAGC,aAAa,CAACN,GAAG,CAAC;EACnC,IAAIO,KAAK,GAAG,CAACF,UAAU,CAAC,CAACG,MAAM,CAACN,UAAU,CAAC;;EAE3C;EACA,OAAOK,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASD,aAAa,CAAEN,GAAG,EAAE;EAC3B,OAAOA,GAAG,CAACS,MAAM,GACbT,GAAG,CAACS,MAAM,CAACC,aAAa,GACxBV,GAAG,CAACW,UAAU,CAACD,aAAa;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASP,KAAK,CAAES,MAAM,EAAE;EACtB,IAAIC,GAAG,GAAGD,MAAM,CAACE,MAAM;EACvB,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,KAAK,GAAGJ,MAAM,CAACE,MAAM;;EAEzB;EACA,KAAK,IAAIG,CAAC,GAAGL,MAAM,CAACE,MAAM,GAAG,CAAC,EAAEG,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC3C,QAAQL,MAAM,CAACM,UAAU,CAACD,CAAC,CAAC;MAC1B,KAAK,IAAI;QAAE;QACT,IAAID,KAAK,KAAKH,GAAG,EAAE;UACjBG,KAAK,GAAGH,GAAG,GAAGI,CAAC;QACjB;QACA;MACF,KAAK,IAAI;QAAE;QACT,IAAID,KAAK,KAAKH,GAAG,EAAE;UACjBE,IAAI,CAACI,IAAI,CAACP,MAAM,CAACQ,SAAS,CAACJ,KAAK,EAAEH,GAAG,CAAC,CAAC;QACzC;QACAG,KAAK,GAAGH,GAAG,GAAGI,CAAC;QACf;MACF;QACED,KAAK,GAAGC,CAAC;QACT;IAAK;EAEX;;EAEA;EACA,IAAID,KAAK,KAAKH,GAAG,EAAE;IACjBE,IAAI,CAACI,IAAI,CAACP,MAAM,CAACQ,SAAS,CAACJ,KAAK,EAAEH,GAAG,CAAC,CAAC;EACzC;EAEA,OAAOE,IAAI;AACb"},"metadata":{},"sourceType":"script","externalDependencies":[]}