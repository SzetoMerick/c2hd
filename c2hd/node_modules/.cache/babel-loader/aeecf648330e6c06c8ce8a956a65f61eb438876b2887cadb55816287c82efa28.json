{"ast":null,"code":"\"use strict\";\n\nvar BOMChar = '\\uFEFF';\nexports.PrependBOM = PrependBOMWrapper;\nfunction PrependBOMWrapper(encoder, options) {\n  this.encoder = encoder;\n  this.addBOM = true;\n}\nPrependBOMWrapper.prototype.write = function (str) {\n  if (this.addBOM) {\n    str = BOMChar + str;\n    this.addBOM = false;\n  }\n  return this.encoder.write(str);\n};\nPrependBOMWrapper.prototype.end = function () {\n  return this.encoder.end();\n};\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n  this.decoder = decoder;\n  this.pass = false;\n  this.options = options || {};\n}\nStripBOMWrapper.prototype.write = function (buf) {\n  var res = this.decoder.write(buf);\n  if (this.pass || !res) return res;\n  if (res[0] === BOMChar) {\n    res = res.slice(1);\n    if (typeof this.options.stripBOM === 'function') this.options.stripBOM();\n  }\n  this.pass = true;\n  return res;\n};\nStripBOMWrapper.prototype.end = function () {\n  return this.decoder.end();\n};","map":{"version":3,"names":["BOMChar","exports","PrependBOM","PrependBOMWrapper","encoder","options","addBOM","prototype","write","str","end","StripBOM","StripBOMWrapper","decoder","pass","buf","res","slice","stripBOM"],"sources":["D:/Documents/VS Code Projects/c2hd/c2hd/node_modules/raw-body/node_modules/iconv-lite/lib/bom-handling.js"],"sourcesContent":["\"use strict\";\r\n\r\nvar BOMChar = '\\uFEFF';\r\n\r\nexports.PrependBOM = PrependBOMWrapper\r\nfunction PrependBOMWrapper(encoder, options) {\r\n    this.encoder = encoder;\r\n    this.addBOM = true;\r\n}\r\n\r\nPrependBOMWrapper.prototype.write = function(str) {\r\n    if (this.addBOM) {\r\n        str = BOMChar + str;\r\n        this.addBOM = false;\r\n    }\r\n\r\n    return this.encoder.write(str);\r\n}\r\n\r\nPrependBOMWrapper.prototype.end = function() {\r\n    return this.encoder.end();\r\n}\r\n\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nexports.StripBOM = StripBOMWrapper;\r\nfunction StripBOMWrapper(decoder, options) {\r\n    this.decoder = decoder;\r\n    this.pass = false;\r\n    this.options = options || {};\r\n}\r\n\r\nStripBOMWrapper.prototype.write = function(buf) {\r\n    var res = this.decoder.write(buf);\r\n    if (this.pass || !res)\r\n        return res;\r\n\r\n    if (res[0] === BOMChar) {\r\n        res = res.slice(1);\r\n        if (typeof this.options.stripBOM === 'function')\r\n            this.options.stripBOM();\r\n    }\r\n\r\n    this.pass = true;\r\n    return res;\r\n}\r\n\r\nStripBOMWrapper.prototype.end = function() {\r\n    return this.decoder.end();\r\n}\r\n\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAG,QAAQ;AAEtBC,OAAO,CAACC,UAAU,GAAGC,iBAAiB;AACtC,SAASA,iBAAiB,CAACC,OAAO,EAAEC,OAAO,EAAE;EACzC,IAAI,CAACD,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACE,MAAM,GAAG,IAAI;AACtB;AAEAH,iBAAiB,CAACI,SAAS,CAACC,KAAK,GAAG,UAASC,GAAG,EAAE;EAC9C,IAAI,IAAI,CAACH,MAAM,EAAE;IACbG,GAAG,GAAGT,OAAO,GAAGS,GAAG;IACnB,IAAI,CAACH,MAAM,GAAG,KAAK;EACvB;EAEA,OAAO,IAAI,CAACF,OAAO,CAACI,KAAK,CAACC,GAAG,CAAC;AAClC,CAAC;AAEDN,iBAAiB,CAACI,SAAS,CAACG,GAAG,GAAG,YAAW;EACzC,OAAO,IAAI,CAACN,OAAO,CAACM,GAAG,EAAE;AAC7B,CAAC;;AAGD;;AAEAT,OAAO,CAACU,QAAQ,GAAGC,eAAe;AAClC,SAASA,eAAe,CAACC,OAAO,EAAER,OAAO,EAAE;EACvC,IAAI,CAACQ,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACC,IAAI,GAAG,KAAK;EACjB,IAAI,CAACT,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;AAChC;AAEAO,eAAe,CAACL,SAAS,CAACC,KAAK,GAAG,UAASO,GAAG,EAAE;EAC5C,IAAIC,GAAG,GAAG,IAAI,CAACH,OAAO,CAACL,KAAK,CAACO,GAAG,CAAC;EACjC,IAAI,IAAI,CAACD,IAAI,IAAI,CAACE,GAAG,EACjB,OAAOA,GAAG;EAEd,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAKhB,OAAO,EAAE;IACpBgB,GAAG,GAAGA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;IAClB,IAAI,OAAO,IAAI,CAACZ,OAAO,CAACa,QAAQ,KAAK,UAAU,EAC3C,IAAI,CAACb,OAAO,CAACa,QAAQ,EAAE;EAC/B;EAEA,IAAI,CAACJ,IAAI,GAAG,IAAI;EAChB,OAAOE,GAAG;AACd,CAAC;AAEDJ,eAAe,CAACL,SAAS,CAACG,GAAG,GAAG,YAAW;EACvC,OAAO,IAAI,CAACG,OAAO,CAACH,GAAG,EAAE;AAC7B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}