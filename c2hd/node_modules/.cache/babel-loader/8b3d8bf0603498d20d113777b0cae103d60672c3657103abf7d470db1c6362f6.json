{"ast":null,"code":"/*!\r\n * finalhandler\r\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n\n'use strict';\n\n/**\r\n * Module dependencies.\r\n * @private\r\n */\nvar debug = require('debug')('finalhandler');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar onFinished = require('on-finished');\nvar parseUrl = require('parseurl');\nvar statuses = require('statuses');\nvar unpipe = require('unpipe');\n\n/**\r\n * Module variables.\r\n * @private\r\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g;\nvar NEWLINE_REGEXP = /\\n/g;\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function' ? setImmediate : function (fn) {\n  process.nextTick(fn.bind.apply(fn, arguments));\n};\nvar isFinished = onFinished.isFinished;\n\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} message\r\n * @private\r\n */\n\nfunction createHtmlDocument(message) {\n  var body = escapeHtml(message).replace(NEWLINE_REGEXP, '<br>').replace(DOUBLE_SPACE_REGEXP, ' &nbsp;');\n  return '<!DOCTYPE html>\\n' + '<html lang=\"en\">\\n' + '<head>\\n' + '<meta charset=\"utf-8\">\\n' + '<title>Error</title>\\n' + '</head>\\n' + '<body>\\n' + '<pre>' + body + '</pre>\\n' + '</body>\\n' + '</html>\\n';\n}\n\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = finalhandler;\n\n/**\r\n * Create a function to handle the final response.\r\n *\r\n * @param {Request} req\r\n * @param {Response} res\r\n * @param {Object} [options]\r\n * @return {Function}\r\n * @public\r\n */\n\nfunction finalhandler(req, res, options) {\n  var opts = options || {};\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development';\n\n  // get error callback\n  var onerror = opts.onerror;\n  return function (err) {\n    var headers;\n    var msg;\n    var status;\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent');\n      return;\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err);\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res);\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err);\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env);\n    } else {\n      // not found\n      status = 404;\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req));\n    }\n    debug('default %s', status);\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror, err, req, res);\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent', status);\n      req.socket.destroy();\n      return;\n    }\n\n    // send response\n    send(req, res, status, headers, msg);\n  };\n}\n\n/**\r\n * Get headers from Error object.\r\n *\r\n * @param {Error} err\r\n * @return {object}\r\n * @private\r\n */\n\nfunction getErrorHeaders(err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined;\n  }\n  var headers = Object.create(null);\n  var keys = Object.keys(err.headers);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    headers[key] = err.headers[key];\n  }\n  return headers;\n}\n\n/**\r\n * Get message from Error object, fallback to status message.\r\n *\r\n * @param {Error} err\r\n * @param {number} status\r\n * @param {string} env\r\n * @return {string}\r\n * @private\r\n */\n\nfunction getErrorMessage(err, status, env) {\n  var msg;\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack;\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString();\n    }\n  }\n  return msg || statuses.message[status];\n}\n\n/**\r\n * Get status code from Error object.\r\n *\r\n * @param {Error} err\r\n * @return {number}\r\n * @private\r\n */\n\nfunction getErrorStatusCode(err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status;\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode;\n  }\n  return undefined;\n}\n\n/**\r\n * Get resource name for the request.\r\n *\r\n * This is typically just the original pathname of the request\r\n * but will fallback to \"resource\" is that cannot be determined.\r\n *\r\n * @param {IncomingMessage} req\r\n * @return {string}\r\n * @private\r\n */\n\nfunction getResourceName(req) {\n  try {\n    return parseUrl.original(req).pathname;\n  } catch (e) {\n    return 'resource';\n  }\n}\n\n/**\r\n * Get status code from response.\r\n *\r\n * @param {OutgoingMessage} res\r\n * @return {number}\r\n * @private\r\n */\n\nfunction getResponseStatusCode(res) {\n  var status = res.statusCode;\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500;\n  }\n  return status;\n}\n\n/**\r\n * Determine if the response headers have been sent.\r\n *\r\n * @param {object} res\r\n * @returns {boolean}\r\n * @private\r\n */\n\nfunction headersSent(res) {\n  return typeof res.headersSent !== 'boolean' ? Boolean(res._header) : res.headersSent;\n}\n\n/**\r\n * Send response.\r\n *\r\n * @param {IncomingMessage} req\r\n * @param {OutgoingMessage} res\r\n * @param {number} status\r\n * @param {object} headers\r\n * @param {string} message\r\n * @private\r\n */\n\nfunction send(req, res, status, headers, message) {\n  function write() {\n    // response body\n    var body = createHtmlDocument(message);\n\n    // response status\n    res.statusCode = status;\n    res.statusMessage = statuses.message[status];\n\n    // remove any content headers\n    res.removeHeader('Content-Encoding');\n    res.removeHeader('Content-Language');\n    res.removeHeader('Content-Range');\n\n    // response headers\n    setHeaders(res, headers);\n\n    // security headers\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\");\n    res.setHeader('X-Content-Type-Options', 'nosniff');\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8');\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'));\n    if (req.method === 'HEAD') {\n      res.end();\n      return;\n    }\n    res.end(body, 'utf8');\n  }\n  if (isFinished(req)) {\n    write();\n    return;\n  }\n\n  // unpipe everything from the request\n  unpipe(req);\n\n  // flush the request\n  onFinished(req, write);\n  req.resume();\n}\n\n/**\r\n * Set response headers from an object.\r\n *\r\n * @param {OutgoingMessage} res\r\n * @param {object} headers\r\n * @private\r\n */\n\nfunction setHeaders(res, headers) {\n  if (!headers) {\n    return;\n  }\n  var keys = Object.keys(headers);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    res.setHeader(key, headers[key]);\n  }\n}","map":{"version":3,"names":["debug","require","encodeUrl","escapeHtml","onFinished","parseUrl","statuses","unpipe","DOUBLE_SPACE_REGEXP","NEWLINE_REGEXP","defer","setImmediate","fn","process","nextTick","bind","apply","arguments","isFinished","createHtmlDocument","message","body","replace","module","exports","finalhandler","req","res","options","opts","env","NODE_ENV","onerror","err","headers","msg","status","headersSent","getErrorStatusCode","undefined","getResponseStatusCode","getErrorHeaders","getErrorMessage","method","getResourceName","socket","destroy","send","Object","create","keys","i","length","key","stack","toString","statusCode","original","pathname","e","Boolean","_header","write","statusMessage","removeHeader","setHeaders","setHeader","Buffer","byteLength","end","resume"],"sources":["D:/Documents/VS Code Projects/c2hd/c2hd/node_modules/finalhandler/index.js"],"sourcesContent":["/*!\r\n * finalhandler\r\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar debug = require('debug')('finalhandler')\r\nvar encodeUrl = require('encodeurl')\r\nvar escapeHtml = require('escape-html')\r\nvar onFinished = require('on-finished')\r\nvar parseUrl = require('parseurl')\r\nvar statuses = require('statuses')\r\nvar unpipe = require('unpipe')\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\r\nvar NEWLINE_REGEXP = /\\n/g\r\n\r\n/* istanbul ignore next */\r\nvar defer = typeof setImmediate === 'function'\r\n  ? setImmediate\r\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\r\nvar isFinished = onFinished.isFinished\r\n\r\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} message\r\n * @private\r\n */\r\n\r\nfunction createHtmlDocument (message) {\r\n  var body = escapeHtml(message)\r\n    .replace(NEWLINE_REGEXP, '<br>')\r\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\r\n\r\n  return '<!DOCTYPE html>\\n' +\r\n    '<html lang=\"en\">\\n' +\r\n    '<head>\\n' +\r\n    '<meta charset=\"utf-8\">\\n' +\r\n    '<title>Error</title>\\n' +\r\n    '</head>\\n' +\r\n    '<body>\\n' +\r\n    '<pre>' + body + '</pre>\\n' +\r\n    '</body>\\n' +\r\n    '</html>\\n'\r\n}\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = finalhandler\r\n\r\n/**\r\n * Create a function to handle the final response.\r\n *\r\n * @param {Request} req\r\n * @param {Response} res\r\n * @param {Object} [options]\r\n * @return {Function}\r\n * @public\r\n */\r\n\r\nfunction finalhandler (req, res, options) {\r\n  var opts = options || {}\r\n\r\n  // get environment\r\n  var env = opts.env || process.env.NODE_ENV || 'development'\r\n\r\n  // get error callback\r\n  var onerror = opts.onerror\r\n\r\n  return function (err) {\r\n    var headers\r\n    var msg\r\n    var status\r\n\r\n    // ignore 404 on in-flight response\r\n    if (!err && headersSent(res)) {\r\n      debug('cannot 404 after headers sent')\r\n      return\r\n    }\r\n\r\n    // unhandled error\r\n    if (err) {\r\n      // respect status code from error\r\n      status = getErrorStatusCode(err)\r\n\r\n      if (status === undefined) {\r\n        // fallback to status code on response\r\n        status = getResponseStatusCode(res)\r\n      } else {\r\n        // respect headers from error\r\n        headers = getErrorHeaders(err)\r\n      }\r\n\r\n      // get error message\r\n      msg = getErrorMessage(err, status, env)\r\n    } else {\r\n      // not found\r\n      status = 404\r\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\r\n    }\r\n\r\n    debug('default %s', status)\r\n\r\n    // schedule onerror callback\r\n    if (err && onerror) {\r\n      defer(onerror, err, req, res)\r\n    }\r\n\r\n    // cannot actually respond\r\n    if (headersSent(res)) {\r\n      debug('cannot %d after headers sent', status)\r\n      req.socket.destroy()\r\n      return\r\n    }\r\n\r\n    // send response\r\n    send(req, res, status, headers, msg)\r\n  }\r\n}\r\n\r\n/**\r\n * Get headers from Error object.\r\n *\r\n * @param {Error} err\r\n * @return {object}\r\n * @private\r\n */\r\n\r\nfunction getErrorHeaders (err) {\r\n  if (!err.headers || typeof err.headers !== 'object') {\r\n    return undefined\r\n  }\r\n\r\n  var headers = Object.create(null)\r\n  var keys = Object.keys(err.headers)\r\n\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i]\r\n    headers[key] = err.headers[key]\r\n  }\r\n\r\n  return headers\r\n}\r\n\r\n/**\r\n * Get message from Error object, fallback to status message.\r\n *\r\n * @param {Error} err\r\n * @param {number} status\r\n * @param {string} env\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction getErrorMessage (err, status, env) {\r\n  var msg\r\n\r\n  if (env !== 'production') {\r\n    // use err.stack, which typically includes err.message\r\n    msg = err.stack\r\n\r\n    // fallback to err.toString() when possible\r\n    if (!msg && typeof err.toString === 'function') {\r\n      msg = err.toString()\r\n    }\r\n  }\r\n\r\n  return msg || statuses.message[status]\r\n}\r\n\r\n/**\r\n * Get status code from Error object.\r\n *\r\n * @param {Error} err\r\n * @return {number}\r\n * @private\r\n */\r\n\r\nfunction getErrorStatusCode (err) {\r\n  // check err.status\r\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\r\n    return err.status\r\n  }\r\n\r\n  // check err.statusCode\r\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\r\n    return err.statusCode\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\n/**\r\n * Get resource name for the request.\r\n *\r\n * This is typically just the original pathname of the request\r\n * but will fallback to \"resource\" is that cannot be determined.\r\n *\r\n * @param {IncomingMessage} req\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction getResourceName (req) {\r\n  try {\r\n    return parseUrl.original(req).pathname\r\n  } catch (e) {\r\n    return 'resource'\r\n  }\r\n}\r\n\r\n/**\r\n * Get status code from response.\r\n *\r\n * @param {OutgoingMessage} res\r\n * @return {number}\r\n * @private\r\n */\r\n\r\nfunction getResponseStatusCode (res) {\r\n  var status = res.statusCode\r\n\r\n  // default status code to 500 if outside valid range\r\n  if (typeof status !== 'number' || status < 400 || status > 599) {\r\n    status = 500\r\n  }\r\n\r\n  return status\r\n}\r\n\r\n/**\r\n * Determine if the response headers have been sent.\r\n *\r\n * @param {object} res\r\n * @returns {boolean}\r\n * @private\r\n */\r\n\r\nfunction headersSent (res) {\r\n  return typeof res.headersSent !== 'boolean'\r\n    ? Boolean(res._header)\r\n    : res.headersSent\r\n}\r\n\r\n/**\r\n * Send response.\r\n *\r\n * @param {IncomingMessage} req\r\n * @param {OutgoingMessage} res\r\n * @param {number} status\r\n * @param {object} headers\r\n * @param {string} message\r\n * @private\r\n */\r\n\r\nfunction send (req, res, status, headers, message) {\r\n  function write () {\r\n    // response body\r\n    var body = createHtmlDocument(message)\r\n\r\n    // response status\r\n    res.statusCode = status\r\n    res.statusMessage = statuses.message[status]\r\n\r\n    // remove any content headers\r\n    res.removeHeader('Content-Encoding')\r\n    res.removeHeader('Content-Language')\r\n    res.removeHeader('Content-Range')\r\n\r\n    // response headers\r\n    setHeaders(res, headers)\r\n\r\n    // security headers\r\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\r\n    res.setHeader('X-Content-Type-Options', 'nosniff')\r\n\r\n    // standard headers\r\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\r\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\r\n\r\n    if (req.method === 'HEAD') {\r\n      res.end()\r\n      return\r\n    }\r\n\r\n    res.end(body, 'utf8')\r\n  }\r\n\r\n  if (isFinished(req)) {\r\n    write()\r\n    return\r\n  }\r\n\r\n  // unpipe everything from the request\r\n  unpipe(req)\r\n\r\n  // flush the request\r\n  onFinished(req, write)\r\n  req.resume()\r\n}\r\n\r\n/**\r\n * Set response headers from an object.\r\n *\r\n * @param {OutgoingMessage} res\r\n * @param {object} headers\r\n * @private\r\n */\r\n\r\nfunction setHeaders (res, headers) {\r\n  if (!headers) {\r\n    return\r\n  }\r\n\r\n  var keys = Object.keys(headers)\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i]\r\n    res.setHeader(key, headers[key])\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}