{"ast":null,"code":"// Use explicit /index.js to help browserify negociation in require '/lib/http-proxy' (!)\nvar ProxyServer = require('./http-proxy/index.js').Server;\n\n/**\r\n * Creates the proxy server.\r\n *\r\n * Examples:\r\n *\r\n *    httpProxy.createProxyServer({ .. }, 8000)\r\n *    // => '{ web: [Function], ws: [Function] ... }'\r\n *\r\n * @param {Object} Options Config object passed to the proxy\r\n *\r\n * @return {Object} Proxy Proxy object with handlers for `ws` and `web` requests\r\n *\r\n * @api public\r\n */\n\nfunction createProxyServer(options) {\n  /*\r\n   *  `options` is needed and it must have the following layout:\r\n   *\r\n   *  {\r\n   *    target : <url string to be parsed with the url module>\r\n   *    forward: <url string to be parsed with the url module>\r\n   *    agent  : <object to be passed to http(s).request>\r\n   *    ssl    : <object to be passed to https.createServer()>\r\n   *    ws     : <true/false, if you want to proxy websockets>\r\n   *    xfwd   : <true/false, adds x-forward headers>\r\n   *    secure : <true/false, verify SSL certificate>\r\n   *    toProxy: <true/false, explicitly specify if we are proxying to another proxy>\r\n   *    prependPath: <true/false, Default: true - specify whether you want to prepend the target's path to the proxy path>\r\n   *    ignorePath: <true/false, Default: false - specify whether you want to ignore the proxy path of the incoming request>\r\n   *    localAddress : <Local interface string to bind for outgoing connections>\r\n   *    changeOrigin: <true/false, Default: false - changes the origin of the host header to the target URL>\r\n   *    preserveHeaderKeyCase: <true/false, Default: false - specify whether you want to keep letter case of response header key >\r\n   *    auth   : Basic authentication i.e. 'user:password' to compute an Authorization header.\r\n   *    hostRewrite: rewrites the location hostname on (201/301/302/307/308) redirects, Default: null.\r\n   *    autoRewrite: rewrites the location host/port on (201/301/302/307/308) redirects based on requested host/port. Default: false.\r\n   *    protocolRewrite: rewrites the location protocol on (201/301/302/307/308) redirects to 'http' or 'https'. Default: null.\r\n   *  }\r\n   *\r\n   *  NOTE: `options.ws` and `options.ssl` are optional.\r\n   *    `options.target and `options.forward` cannot be\r\n   *    both missing\r\n   *  }\r\n   */\n\n  return new ProxyServer(options);\n}\nProxyServer.createProxyServer = createProxyServer;\nProxyServer.createServer = createProxyServer;\nProxyServer.createProxy = createProxyServer;\n\n/**\r\n * Export the proxy \"Server\" as the main export.\r\n */\nmodule.exports = ProxyServer;","map":{"version":3,"names":["ProxyServer","require","Server","createProxyServer","options","createServer","createProxy","module","exports"],"sources":["D:/Documents/VS Code Projects/c2hd/c2hd/node_modules/http-proxy/lib/http-proxy.js"],"sourcesContent":[" // Use explicit /index.js to help browserify negociation in require '/lib/http-proxy' (!)\r\nvar ProxyServer = require('./http-proxy/index.js').Server;\r\n\r\n\r\n/**\r\n * Creates the proxy server.\r\n *\r\n * Examples:\r\n *\r\n *    httpProxy.createProxyServer({ .. }, 8000)\r\n *    // => '{ web: [Function], ws: [Function] ... }'\r\n *\r\n * @param {Object} Options Config object passed to the proxy\r\n *\r\n * @return {Object} Proxy Proxy object with handlers for `ws` and `web` requests\r\n *\r\n * @api public\r\n */\r\n\r\n\r\nfunction createProxyServer(options) {\r\n  /*\r\n   *  `options` is needed and it must have the following layout:\r\n   *\r\n   *  {\r\n   *    target : <url string to be parsed with the url module>\r\n   *    forward: <url string to be parsed with the url module>\r\n   *    agent  : <object to be passed to http(s).request>\r\n   *    ssl    : <object to be passed to https.createServer()>\r\n   *    ws     : <true/false, if you want to proxy websockets>\r\n   *    xfwd   : <true/false, adds x-forward headers>\r\n   *    secure : <true/false, verify SSL certificate>\r\n   *    toProxy: <true/false, explicitly specify if we are proxying to another proxy>\r\n   *    prependPath: <true/false, Default: true - specify whether you want to prepend the target's path to the proxy path>\r\n   *    ignorePath: <true/false, Default: false - specify whether you want to ignore the proxy path of the incoming request>\r\n   *    localAddress : <Local interface string to bind for outgoing connections>\r\n   *    changeOrigin: <true/false, Default: false - changes the origin of the host header to the target URL>\r\n   *    preserveHeaderKeyCase: <true/false, Default: false - specify whether you want to keep letter case of response header key >\r\n   *    auth   : Basic authentication i.e. 'user:password' to compute an Authorization header.\r\n   *    hostRewrite: rewrites the location hostname on (201/301/302/307/308) redirects, Default: null.\r\n   *    autoRewrite: rewrites the location host/port on (201/301/302/307/308) redirects based on requested host/port. Default: false.\r\n   *    protocolRewrite: rewrites the location protocol on (201/301/302/307/308) redirects to 'http' or 'https'. Default: null.\r\n   *  }\r\n   *\r\n   *  NOTE: `options.ws` and `options.ssl` are optional.\r\n   *    `options.target and `options.forward` cannot be\r\n   *    both missing\r\n   *  }\r\n   */\r\n\r\n  return new ProxyServer(options);\r\n}\r\n\r\n\r\nProxyServer.createProxyServer = createProxyServer;\r\nProxyServer.createServer      = createProxyServer;\r\nProxyServer.createProxy       = createProxyServer;\r\n\r\n\r\n\r\n\r\n/**\r\n * Export the proxy \"Server\" as the main export.\r\n */\r\nmodule.exports = ProxyServer;\r\n\r\n"],"mappings":"AAAC;AACD,IAAIA,WAAW,GAAGC,OAAO,CAAC,uBAAuB,CAAC,CAACC,MAAM;;AAGzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,iBAAiB,CAACC,OAAO,EAAE;EAClC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,OAAO,IAAIJ,WAAW,CAACI,OAAO,CAAC;AACjC;AAGAJ,WAAW,CAACG,iBAAiB,GAAGA,iBAAiB;AACjDH,WAAW,CAACK,YAAY,GAAQF,iBAAiB;AACjDH,WAAW,CAACM,WAAW,GAASH,iBAAiB;;AAKjD;AACA;AACA;AACAI,MAAM,CAACC,OAAO,GAAGR,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}