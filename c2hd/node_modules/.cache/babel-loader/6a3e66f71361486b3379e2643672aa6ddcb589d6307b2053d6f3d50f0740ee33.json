{"ast":null,"code":"/**\r\n * negotiator\r\n * Copyright(c) 2012 Isaac Z. Schlueter\r\n * Copyright(c) 2014 Federico Romero\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n\n'use strict';\n\n/**\r\n * Module exports.\r\n * @public\r\n */\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\r\n * Module variables.\r\n * @private\r\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\r\n * Parse the Accept-Language header.\r\n * @private\r\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i);\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n  return accepts;\n}\n\n/**\r\n * Parse a language from the Accept-Language header.\r\n * @private\r\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n  var prefix = match[1];\n  var suffix = match[2];\n  var full = prefix;\n  if (suffix) full += \"-\" + suffix;\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';');\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\r\n * Get the priority of a language.\r\n * @private\r\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {\n    o: -1,\n    q: 0,\n    s: 0\n  };\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n  return priority;\n}\n\n/**\r\n * Get the specificity of the language.\r\n * @private\r\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language);\n  if (!p) return null;\n  var s = 0;\n  if (spec.full.toLowerCase() === p.full.toLowerCase()) {\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*') {\n    return null;\n  }\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  };\n}\n;\n\n/**\r\n * Get the preferred languages from an Accept-Language header.\r\n * @public\r\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n  if (!provided) {\n    // sorted list of all languages\n    return accepts.filter(isQuality).sort(compareSpecs).map(getFullLanguage);\n  }\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\r\n * Compare two specs.\r\n * @private\r\n */\n\nfunction compareSpecs(a, b) {\n  return b.q - a.q || b.s - a.s || a.o - b.o || a.i - b.i || 0;\n}\n\n/**\r\n * Get full language string.\r\n * @private\r\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\r\n * Check if a spec has any quality.\r\n * @private\r\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}","map":{"version":3,"names":["module","exports","preferredLanguages","simpleLanguageRegExp","parseAcceptLanguage","accept","accepts","split","i","j","length","language","parseLanguage","trim","str","match","exec","prefix","suffix","full","q","params","p","parseFloat","getLanguagePriority","accepted","index","priority","o","s","spec","specify","toLowerCase","provided","undefined","filter","isQuality","sort","compareSpecs","map","getFullLanguage","priorities","getPriority","type","getLanguage","indexOf","a","b"],"sources":["D:/Documents/VS Code Projects/c2hd/c2hd/node_modules/negotiator/lib/language.js"],"sourcesContent":["/**\r\n * negotiator\r\n * Copyright(c) 2012 Isaac Z. Schlueter\r\n * Copyright(c) 2014 Federico Romero\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = preferredLanguages;\r\nmodule.exports.preferredLanguages = preferredLanguages;\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\r\n\r\n/**\r\n * Parse the Accept-Language header.\r\n * @private\r\n */\r\n\r\nfunction parseAcceptLanguage(accept) {\r\n  var accepts = accept.split(',');\r\n\r\n  for (var i = 0, j = 0; i < accepts.length; i++) {\r\n    var language = parseLanguage(accepts[i].trim(), i);\r\n\r\n    if (language) {\r\n      accepts[j++] = language;\r\n    }\r\n  }\r\n\r\n  // trim accepts\r\n  accepts.length = j;\r\n\r\n  return accepts;\r\n}\r\n\r\n/**\r\n * Parse a language from the Accept-Language header.\r\n * @private\r\n */\r\n\r\nfunction parseLanguage(str, i) {\r\n  var match = simpleLanguageRegExp.exec(str);\r\n  if (!match) return null;\r\n\r\n  var prefix = match[1]\r\n  var suffix = match[2]\r\n  var full = prefix\r\n\r\n  if (suffix) full += \"-\" + suffix;\r\n\r\n  var q = 1;\r\n  if (match[3]) {\r\n    var params = match[3].split(';')\r\n    for (var j = 0; j < params.length; j++) {\r\n      var p = params[j].split('=');\r\n      if (p[0] === 'q') q = parseFloat(p[1]);\r\n    }\r\n  }\r\n\r\n  return {\r\n    prefix: prefix,\r\n    suffix: suffix,\r\n    q: q,\r\n    i: i,\r\n    full: full\r\n  };\r\n}\r\n\r\n/**\r\n * Get the priority of a language.\r\n * @private\r\n */\r\n\r\nfunction getLanguagePriority(language, accepted, index) {\r\n  var priority = {o: -1, q: 0, s: 0};\r\n\r\n  for (var i = 0; i < accepted.length; i++) {\r\n    var spec = specify(language, accepted[i], index);\r\n\r\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\r\n      priority = spec;\r\n    }\r\n  }\r\n\r\n  return priority;\r\n}\r\n\r\n/**\r\n * Get the specificity of the language.\r\n * @private\r\n */\r\n\r\nfunction specify(language, spec, index) {\r\n  var p = parseLanguage(language)\r\n  if (!p) return null;\r\n  var s = 0;\r\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\r\n    s |= 4;\r\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\r\n    s |= 2;\r\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\r\n    s |= 1;\r\n  } else if (spec.full !== '*' ) {\r\n    return null\r\n  }\r\n\r\n  return {\r\n    i: index,\r\n    o: spec.i,\r\n    q: spec.q,\r\n    s: s\r\n  }\r\n};\r\n\r\n/**\r\n * Get the preferred languages from an Accept-Language header.\r\n * @public\r\n */\r\n\r\nfunction preferredLanguages(accept, provided) {\r\n  // RFC 2616 sec 14.4: no header = *\r\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\r\n\r\n  if (!provided) {\r\n    // sorted list of all languages\r\n    return accepts\r\n      .filter(isQuality)\r\n      .sort(compareSpecs)\r\n      .map(getFullLanguage);\r\n  }\r\n\r\n  var priorities = provided.map(function getPriority(type, index) {\r\n    return getLanguagePriority(type, accepts, index);\r\n  });\r\n\r\n  // sorted list of accepted languages\r\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\r\n    return provided[priorities.indexOf(priority)];\r\n  });\r\n}\r\n\r\n/**\r\n * Compare two specs.\r\n * @private\r\n */\r\n\r\nfunction compareSpecs(a, b) {\r\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\r\n}\r\n\r\n/**\r\n * Get full language string.\r\n * @private\r\n */\r\n\r\nfunction getFullLanguage(spec) {\r\n  return spec.full;\r\n}\r\n\r\n/**\r\n * Check if a spec has any quality.\r\n * @private\r\n */\r\n\r\nfunction isQuality(spec) {\r\n  return spec.q > 0;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}